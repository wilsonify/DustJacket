{
  "book_id": 1261,
  "book_uuid": "902094aa-9538-49db-9d7f-db049bd4f203",
  "title": "Hands-On Design Patterns With C++",
  "pubdate": "2019-04-15 04:00:00+00:00",
  "isbn": "",
  "author_name": "Fedor G. Pikus",
  "publisher_name": "Packt Publishing",
  "series_name": "",
  "series_index": 1.0,
  "tags": [
    79,
    197,
    223,
    229,
    476,
    3147
  ],
  "description": "<div>\n<p>A comprehensive guide with extensive coverage on concepts such as OOP, functional programming, generic programming, and STL along with the latest features of C++ Key Features Delve into the core patterns and components of C++ in order to master application design Learn tricks, techniques, and best practices to solve common design and architectural challenges Understand the limitation imposed by C++ and how to solve them using design patterns Book Description C++ is a general-purpose programming language designed with the goals of efficiency, performance, and flexibility in mind. Design patterns are commonly accepted solutions to well-recognized design problems. In essence, they are a library of reusable components, only for software architecture, and not for a concrete implementation. The focus of this book is on the design patterns that naturally lend themselves to the needs of a C++ programmer, and on the patterns that uniquely benefit from the features of C++, in particular, the generic programming. Armed with the knowledge of these patterns, you will spend less time searching for a solution to a common problem and be familiar with the solutions developed from experience, as well as their advantages and drawbacks. The other use of design patterns is as a concise and an efficient way to communicate. A pattern is a familiar and instantly recognizable solution to specific problem; through its use, sometimes with a single line of code, we can convey a considerable amount of information. The code conveys: \"\"\"\"This is the problem we are facing, these are additional considerations that are most important in our case; hence, the following well-known solution was chosen. </p>\n<p>\"\"\"\" By the end of this book, you will have gained a comprehensive understanding of design patterns to create robust, reusable, and maintainable code. What you will learn Recognize the most common design patterns used in C++ Understand how to use C++ generic programming to solve common design problems Explore the most powerful C++ idioms, their strengths, and drawbacks Rediscover how to use popular C++ idioms with generic programming Understand the impact of design patterns on the program's performance Who this book is for This book is for experienced C++ developers and programmers who wish to learn about software design patterns and principles and apply them to create robust, reusable, and easily maintainable apps.</p></div>"
}
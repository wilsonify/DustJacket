{
  "book_id": 1272,
  "book_uuid": "f8b191e9-3a66-4ab8-8ee7-ed76bcd85a76",
  "title": "Pyomo \u2014 Optimization Modeling in Python",
  "pubdate": "2017-05-26 04:00:00+00:00",
  "isbn": "",
  "author_name": "William E. Hart",
  "publisher_name": "Springer",
  "series_name": "",
  "series_index": 1.0,
  "tags": [
    79,
    197,
    199,
    201,
    238,
    252,
    269,
    279,
    286,
    573,
    3134,
    3242,
    3244
  ],
  "description": "<div>\n<p>\u200bThis book provides a complete and comprehensive guide to Pyomo (Python Optimization Modeling Objects) for beginning and advanced modelers, including students at the undergraduate and graduate levels, academic researchers, and practitioners. Using many examples to illustrate the different techniques useful for formulating models, this text beautifully elucidates the breadth of modeling capabilities that are supported by Pyomo and its handling of complex real-world applications. This second edition provides an expanded presentation of Pyomo\u2019s modeling capabilities, providing a broader description of the software that will enable the user to develop and optimize models. Introductory chapters have been revised to extend tutorials; chapters that discuss advanced features now include the new functionalities added to Pyomo since the first edition including generalized disjunctive programming, mathematical programming with equilibrium constraints, and bilevel programming. </p>\n<p>Pyomo is an open source software package for formulating and solving large-scale optimization problems. The software extends the modeling approach supported by modern AML (Algebraic Modeling Language) tools. Pyomo is a flexible, extensible, and portable AML that is embedded in Python, a full-featured scripting language. Python is a powerful and dynamic programming language that has a very clear, readable syntax and intuitive object orientation. Pyomo includes Python classes for defining sparse sets, parameters, and variables, which can be used to formulate algebraic expressions that define objectives and constraints. Moreover, Pyomo can be used from a command-line interface and within Python's interactive command environment, which makes it easy to create Pyomo models, apply a variety of optimizers, and examine solutions.</p></div>"
}